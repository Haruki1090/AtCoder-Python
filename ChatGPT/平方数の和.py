"""
問題：平方数の和

問題文
正の整数 N が与えられます。N を2つの平方数の和として表す方法のうち、それぞれの平方数が非負整数である方法の数を求めてください。具体的には、N = a^2 + b^2 として表すことができる (a, b) の組の数を求めてください（a と b は非負整数）。ただし、(a, b) と (b, a) は同じ方法として数えます。

制約
1 <= N <= 10^5

入力
入力は以下の形式で標準入力から与えられます。
N

出力
N を2つの平方数の和として表す方法の数を出力してください。

入力例 1
5

出力例 1
1

解説
入力例 1 の場合、5 = 2^2 + 1^2 として表すことができますが、(a, b) と (b, a) は同じ方法として数えるため、答えは 1 です。

入力例 2
25

出力例 2
2

解説
入力例 2 の場合、25 = 0^2 + 5^2 または 25 = 5^2 + 0^2 として表すことができます。ここでも、(a, b) と (b, a) は同じ方法として数えるため、(0, 5) と (5, 0) の2通りが存在し、答えは 2 です。
"""

# from math import sqrt # 平方根を求める関数math.sqrtをインポート

# n = int(input())
# count = 0
# a = 0

# while a <= sqrt(n):
#     if n - a ** 2 >= 0 and sqrt(n - a ** 2) == int(sqrt(n - a ** 2)) and a <= sqrt(n - a ** 2):
#         count += 1
#         print(a, int(sqrt(n - a ** 2))) #テスト用
#     a += 1

# print(count)


# 改善コード

from math import sqrt

n = int(input())
count = 0

# aの最大値はsqrt(n)までで十分
for a in range(int(sqrt(n)) + 1): # range関数の終点は含まれないので +1 する
    b_square = n - a ** 2 # b^2 = n - a^2
    b = int(sqrt(b_square)) # b は整数である必要がある
    if a ** 2 + b ** 2 == n and a <= b:  # a <= b の条件を追加して重複を避ける
        count += 1
        print(a, b)  # テスト用

print(count)
